<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Order Details - Adidas</title>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link rel="stylesheet" href="/assets/user-style/sidebar.css">
    <link rel="stylesheet" href="/assets/user-style/wallet.css">
    <link rel="shortcut icon" type="image/x-icon" href="assets/img/favicon.ico" />
</head>

<body>
    <%-include('../partials/user/header')%>
    <input type="checkbox" id="sidebar-toggle" />
    <label for="sidebar-toggle" class="sidebar-toggle-label">☰</label>

    <!-- Sidebar content remains the same -->
   <aside class="sidebar">
  <nav>
    <ul class="sidebar-menu">
      <li><a href="/userProfile" >Account Overview</a></li>
      <li><a href="/orders" >Order Details</a></li>
      <li><a href="/addressManagement">Manage Address</a></li>
      <li><a href="/wallet" class="active">Wallet</a></li>
     
      <li><a href="/wishlist">Wishlist</a></li>
    </ul>
  </nav>
  <button class="logout-btn">Logout</button>
</aside>
    <main class="container">
        <div class="view-port">
            <div class="wallet-container">
               <!-- Wallet Balance Card -->
      <div class="wallet-card">
        <div class="wallet-label">Available Balance</div>
        <div class="wallet-balance">₹<%= walletBalance %></div>
      </div>
                
                <!-- Add Money Form -->
                <div class="add-money-form">
                    <h3 class="mb-4">Add Money to Wallet</h3>
                    <form id="addMoneyForm">
                        <div class="mb-3">
                            <label for="amount" class="form-label">Enter Amount (₹)</label>
                            <input type="number" class="form-control" id="amount" name="amount" min="1" required>
                        </div>
                        <button type="submit" class="btn btn-primary">Add Money</button>
                    </form>
                </div>
                
               <!-- Transaction History -->
      <div class="transaction-history">
        <h3 class="mb-4">Transaction History</h3>
        <% if (transactions && transactions.length > 0) { %>
          <div class="transaction-list">
            <% transactions.forEach(function(transaction) { %>
              <div class="transaction-item">
                <div class="transaction-details">
                  <div class="transaction-type"><%= transaction.type %></div>
                  <div class="transaction-description"><%= transaction.description %></div>
                  <div class="transaction-date"><%= transaction.date %></div>
                  <% if (transaction.status !== 'Completed') { %>
                    <div class="transaction-status"><%= transaction.status %></div>
                  <% } %>
                </div>
                <div class="transaction-amount <%= transaction.isDebit ? 'debit' : 'credit' %>">
                  <%= transaction.isDebit ? '-' : '+' %>₹<%= transaction.amount %>
                </div>
              </div>
            <% }); %>
          </div>
        <% } else { %>
          <div class="no-transactions">
            <p>No transactions found</p>
          </div>
        <% } %>
      </div>
    </div>
  </div>
</main>

    <!-- Add these scripts before your custom script -->
    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
        document.getElementById('addMoneyForm').addEventListener('submit', async (e) => {
            e.preventDefault();
            const amount = document.getElementById('amount').value;

            try {
                // Create order
                const response = await fetch('/add-money', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ amount })
                });
                const data = await response.json();

                if (data.error) {
                    throw new Error(data.error);
                }

                // Initialize Razorpay
                const options = {
                    key: data.key_id,
                    amount: data.amount,
                    currency: data.currency,
                    order_id: data.orderId,
                    name: "Wallet Recharge",
                    description: "Add money to wallet",
                    handler: async function (response) {
                        try {
                            // Verify payment
                            const verifyResponse = await fetch('/verify-recharge', {
                                method: 'POST',
                                headers: { 'Content-Type': 'application/json' },
                                body: JSON.stringify({
                                    razorpay_order_id: response.razorpay_order_id,
                                    razorpay_payment_id: response.razorpay_payment_id,
                                    razorpay_signature: response.razorpay_signature,
                                    amount: data.amount
                                })
                            });
                            
                            const verifyData = await verifyResponse.json();
                            if (verifyData.success) {
                                Swal.fire({
                                    icon: 'success',
                                    title: 'Success',
                                    text: 'Money added to wallet successfully!'
                                }).then(() => {
                                    location.reload();
                                });
                            } else {
                                throw new Error('Payment verification failed');
                            }
                        } catch (error) {
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: 'Failed to verify payment. Please contact support.'
                            });
                        }
                    },
                    prefill: {
                        name: "User",
                        email: "user@example.com",
                        contact: ""
                    },
                    theme: {
                        color: "#3399cc"
                    }
                };

                const rzp = new Razorpay(options);
                rzp.open();

                rzp.on('payment.failed', function (response){
                    Swal.fire({
                        icon: 'error',
                        title: 'Payment Failed',
                        text: 'The payment was unsuccessful. Please try again.'
                    });
                });
            } catch (error) {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: error.message
                });
            }
        });
    </script>

    <%-include('../partials/user/footer')%>
</body>
</html>


