<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Checkout</title>
    <link rel="stylesheet" href="/assets/user-style/checkout.css">
    
     <link
      rel="shortcut icon"
      type="image/x-icon"s
      href="assets/img/favicon.ico"
    />
    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
</head>

<body>
   <%- include('../partials/user/header')%>

  
  <div class="content">
    <div class="container">
        <h1>Checkout</h1>
        <div class="progress-bar">
            <div class="progress-step">
                <div class="step-number">1</div>
                <p>Cart</p>
            </div>
            <div class="progress-step">
                <div class="step-number">2</div>
                <p>Details</p>
            </div>
            <div class="progress-step">
                <div class="step-number">3</div>
                <p>Payment</p>
            </div>
        </div>

        <div class="checkout-grid">
            <!-- Checkout Details Section -->
            <div class="checkout-details">
                <!-- Cart Section -->
                <!-- Cart Section -->
<div class="section cart-section">
    <h2>Your Cart</h2>
    <% if (cart && cart.items.length > 0) { %>
        <div class="cart-items-container">
            <% cart.items.forEach(item => { %>
                <div class="product-summary">
                    <img src="<%= item.product.productImage[0] %>" alt="<%= item.product.productName %>" class="product-image">
                    <div class="product-details">
                        <h3><%= item.product.productName %></h3>
                        <p>Quantity: <%= item.quantity %></p>
                        <p>Price: ₹<%= item.price %></p>
                    </div>
                </div>
            <% }); %>  
        </div>
        <div class="cart-summary-footer">
            <p>Total Items: <%= cart.items.length %></p>
        </div>
    <% } else { %>
        <p>Your cart is empty.</p>
    <% } %>
</div>

                <!-- Shipping Address Section -->
               <!-- Shipping Address Section -->
<div class="section">
    <h2>Shipping Address</h2>
    <form id="shipping-form">
        <% if (Address && Address.address && Address.address.length > 0) { %>
            <div class="address-options-container">
                <% Address.address.forEach((address, index) => { %>
                    <div class="address-option">
                        <input 
                            type="radio" 
                            id="address<%= index %>" 
                            name="address" 
                            value="<%= address._id %>" 
                            <%= index === 0 ? 'checked' : '' %>>
                        <label for="address<%= index %>">
                           <b><%= address.addressType %></b><br>
                           <%= address.city %>,<%= address.landmark %>, <%= address.district %><br>
                            <%= address.pincode %>, <%= address.phone %>
                        </label>
                    </div>
                <% }); %>
            </div>
            <div class="add-address-container">
                <a href="/addressManagement" class="continue-shopping">Add address</a>
            </div>
        <% } else { %>
            <p>No address found. Please add an address.</p>
            <div class="add-address-container">
                <a href="/addressManagement" class="continue-shopping">Add address</a>
            </div>
        <% } %>
    </form>
</div>
            </div>

            <!-- Payment Summary Section -->
            <div class="payment-summary">
                <!-- Payment Method -->
                <div class="section">
                    <h2>Payment Method</h2>
                    <form id="payment-form">
                        <div class="form-group">
                            <label>Select a payment method:</label>
                            <div class="payment-option">
                                <input type="radio" id="cod" name="payment" value="cod" checked>
                                <label for="cod">Cash on Delivery</label>
                            </div>
                            <div class="payment-option">
                                <input type="radio" id="razorpay" name="payment" value="razorpay">
                                <label for="razorpay">Razorpay</label>
                            </div>
                        </div>
                    </form>
                </div>

                <!-- Order Summary -->
                <div class="section">
                    <h2>Order Summary</h2>
                    <% if (cart && cart.items.length > 0) { %>
                        <p>Subtotal:₹<%= cart.totalAmount %></p>
                        <p>Shipping: ₹10.00</p>
                        <p>Tax:₹0.00 </p>
                        <div class="total">
                            Total: ₹<%= cart.totalAmount + 10 %>
                        </div>
                    <% } else { %>
                        <p>No items to display.</p>
                    <% } %>
                    <button class="btn" onclick="submitOrder()">Place Order</button>
                </div>
            </div>
        </div>
    </div>
     </div>
<br>
<br>
<br>
   <%- include('../partials/user/footer')%>
    <div class="toast-container"></div>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
 <script>
        const showToast = (message, type = 'success') => {
            const toastContainer = document.querySelector('.toast-container');
            
            const toast = document.createElement('div');
            toast.className = `toast ${type}`;
            
            let icon;
            switch(type) {
                case 'success':
                    icon = 'check-circle';
                    break;
                case 'error':
                    icon = 'exclamation-circle';
                    break;
                case 'warning':
                    icon = 'exclamation-triangle';
                    break;
                default:
                    icon = 'info-circle';
            }
            
            toast.innerHTML = `
                <i class="fas fa-${icon} toast-icon"></i>
                <span>${message}</span>
            `;
            
            toastContainer.appendChild(toast);
            
            // Trigger reflow
            toast.offsetHeight;
            
            // Show toast
            setTimeout(() => toast.classList.add('show'), 10);
            
            // Remove toast after 3 seconds
            setTimeout(() => {
                toast.classList.remove('show');
                setTimeout(() => toast.remove(), 300);
            }, 3000);
        };

      
async function submitOrder() {
    const shippingForm = document.getElementById('shipping-form');
    const selectedAddress = shippingForm.querySelector('input[name="address"]:checked');
    const selectedPayment = document.querySelector('input[name="payment"]:checked');

    if (!selectedAddress) {
        showToast('Please select a shipping address', 'warning');
        return;
    }

    const addressId = selectedAddress.value;
    const paymentMethod = selectedPayment.value === 'cod' ? 'COD' : 'RAZORPAY';
    const cartItems = <%- JSON.stringify(cart.items || []) %>;
    const addressLabel = selectedAddress.nextElementSibling.innerHTML.trim();

    // Confirm order first
    const result = await Swal.fire({
        title: 'Confirm Your Order',
        html: `
            <h3>Shipping Address</h3>
            <p>${addressLabel}</p>
            <h3>Payment Method</h3>
            <p>${paymentMethod === 'COD' ? 'Cash on Delivery' : 'Razorpay'}</p>
        `,
        icon: 'info',
        showCancelButton: true,
        confirmButtonText: 'Place Order',
        cancelButtonText: 'Cancel',
    });

    if (!result.isConfirmed) {
        showToast('Order cancelled', 'warning');
        return;
    }

    try {
      
        console.log('Request Body:', {
            addressId,
            paymentMethod,
            cartItems
        });

        const response = await fetch('/place-order', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                addressId: addressId,
                paymentMethod: paymentMethod,
                cartItems: cartItems,
            }),
        });

        const data = await response.json();
        
      
        console.log('Server Response:', data);

        if (!response.ok) {
            throw new Error(data.error || 'Failed to place order');
        }

        if (paymentMethod === 'COD') {
            showToast('Order placed successfully!', 'success');
            setTimeout(() => {
                window.location.href = '/order-success';
            }, 1500);
        } else if (paymentMethod === 'RAZORPAY') {
            // Handle Razorpay payment
            const options = {
                key: data.key_id,
                amount: data.amount,
                currency: data.currency,
                name: "Your Store Name",
                description: "Order Payment",
                order_id: data.orderId,
                handler: async function (response) {
                    try {
                        // Verify payment
                        const verifyResponse = await fetch('/verify-payment', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                            },
                            body: JSON.stringify({
                                razorpay_order_id: response.razorpay_order_id,
                                razorpay_payment_id: response.razorpay_payment_id,
                                razorpay_signature: response.razorpay_signature,
                                addressId: addressId
                            }),
                        });

                        const verifyData = await verifyResponse.json();
                        
                        if (verifyData.success) {
                            showToast('Payment successful!', 'success');
                            setTimeout(() => {
                                window.location.href = '/order-success';
                            }, 1500);
                        } else {
                            throw new Error('Payment verification failed');
                        }
                    } catch (error) {
                        showToast('Payment verification failed', 'error');
                        console.error('Verification Error:', error);
                    }
                },
                prefill: {
                    name: "Customer Name",
                    email: "customer@example.com",
                    contact: "9999999999"
                },
                theme: {
                    color: "#3399cc"
                }
            };

            const rzp = new Razorpay(options);
            rzp.open();
        }
    } catch (error) {
        showToast(error.message || 'An unexpected error occurred', 'error');
        console.error('Order Error:', error);
    }
}
    </script>
</body>
</html>
