<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Order Details - Adidas</title>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link rel="stylesheet" href="/user-style/order-details.css">
     <link
      rel="shortcut icon"
      type="image/x-icon"s
      href="assets/img/favicon.ico"
    />
</head>
<body>
   <%-include('../partials/user/header')%>
<button id="openModal" class="open-modal-btn">Open Menu</button>
    <div class="layout">
      <!-- Sidebar -->
      <!-- Trigger Button -->

      <!-- Modal -->
      <div id="responsiveModal" class="modal">
        <div class="modal-content">
          <span class="close-btn">&times;</span>
          <div class="modal-menu">
            <a href="/userProfile"
              ><i class="fa-solid fa-user"></i> Account Overview</a
            >
            <a href="/orders"><i class="fa-solid fa-shop"></i> My Orders</a>
            <a href="/addressManagement"
              ><i class="fa-solid fa-address-book"></i> Manage Addresses</a
            >
            <a href="wallet.html"><i class="fa-solid fa-wallet"></i> Wallet</a>
            <a href="/password"><i class="fa-solid fa-key"></i> Password</a>
            <a href="wishlist.html"
              ><i class="fa-solid fa-heart"></i> Wishlist</a
            >
            <button class="logout-btn">Logout</button>
          </div>
        </div>
      </div>
    <div class="container" id="orders-container">
        <!-- Orders will be dynamically added here -->
    </div>

    </div>
    <script>
        // Orders array is dynamically embedded from the backend
        const orders = <%- JSON.stringify(orders) %>;

        function createOrderCard(order) {
            const orderCard = document.createElement('div');
            orderCard.className = 'order-card';

            orderCard.innerHTML = `
                <div class="order-header">
                    <span class="order-number">${order.id}</span>
                    <span class="order-status">${order.status}</span>
                </div>
                <div class="order-info">
                    <div>
                        <p><strong>Order Date:</strong> ${order.date}</p>
                        <p><strong>Payment Method:</strong> ${order.paymentMethod}</p>
                    </div>
                    <div>
                        <p><strong>Shipping Method:</strong> ${order.shippingMethod}</p>
                        <p><strong>Total Items:</strong> ${order.products.reduce((sum, product) => sum + product.quantity, 0)}</p>
                    </div>
                </div>
                <div class="order-total">Total: ₹${order.total.toFixed(2)}</div>
                <button class="view-products">View Products</button>
                <div class="product-list">
                    ${order.products.map(product => `
                        <div class="product-item">
                            <img src="${product.image}" alt="${product.name}" class="product-image" style="width: 100px;">
                            <div class="product-details">
                                <p class="product-name">${product.name}</p>
                                <p class="product-price">₹${product.price} <span class="product-quantity">Qty: ${product.quantity}</span></p>
                            </div>
                        </div>
                    `).join('')}
                </div>
            `;

            const viewProductsBtn = orderCard.querySelector('.view-products');
            const productList = orderCard.querySelector('.product-list');

            viewProductsBtn.addEventListener('click', () => {
                if (productList.style.display === 'none' || productList.style.display === '') {
                    productList.style.display = 'block';
                    viewProductsBtn.textContent = 'Hide Products';
                } else {
                    productList.style.display = 'none';
                    viewProductsBtn.textContent = 'View Products';
                }
            });

            return orderCard;
        }

        // Render all orders on page load
        document.addEventListener('DOMContentLoaded', () => {
            const ordersContainer = document.getElementById('orders-container');
            orders.forEach(order => ordersContainer.appendChild(createOrderCard(order)));
        });
    </script>
     <script src="/user.js"></script>
   
</body>

</html>
 <%-include('../partials/user/footer')%>