<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Beats - Forgot Password</title>
    <link rel="stylesheet" href="/assets/user-style/forgotten.css" />
    <link
      href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap"
      rel="stylesheet"
    />
    <link
      rel="shortcut icon"
      type="image/x-icon"
      href="assets/img/favicon.ico"
    />
    <link rel="icon" type="image/png" href="/assets/img/beat-logo-161616.png"> 
</head>
<body>
    <div class="page-wrapper">
        <!-- Left Side: Form -->
        <div class="form-side">
            <!-- Theme Toggle Button -->
            <button id="theme-toggle" class="theme-toggle-btn">
                <span class="toggle-icon">
                    <svg class="dark-icon" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z"></path></svg>
                    <svg class="light-icon" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" style="display: none;"><circle cx="12" cy="12" r="5"></circle><line x1="12" y1="1" x2="12" y2="3"></line><line x1="12" y1="21" x2="12" y2="23"></line><line x1="4.22" y1="4.22" x2="5.64" y2="5.64"></line><line x1="18.36" y1="18.36" x2="19.78" y2="19.78"></line><line x1="1" y1="12" x2="3" y2="12"></line><line x1="21" y1="12" x2="23" y2="12"></line><line x1="4.22" y1="19.78" x2="5.64" y2="18.36"></line><line x1="18.36" y1="5.64" x2="19.78" y2="4.22"></line></svg>
                </span>
            </button>
            <div class="login-form">
                <div class="form-header">
                    <h1>Forgot Password?</h1>
                    <h3>Don’t worry, we’ll help you recover it</h3>
                </div>
                <form id="resetPasswordForm" action="/resetPassword" method="POST">
                    <div class="form-group">
                        <input type="email" id="emailInput" name="email" class="form-control" placeholder="Enter your email" >
                        <div id="emailError" class="error-message" style="display: none;">Please enter a valid email address.</div>
                    </div>
                    <button type="submit" class="btn btn-primary">Send Reset Instructions</button>
                </form>
                <div class="forgot-password">
                    <a href="/login">Back to Login</a>
                </div>
            </div>
        </div>

        <!-- Right Side: Image Background -->
        <div class="image-side">
            <div class="welcome-content">
                <h2 class="welcome-heading">Reset Password</h2>
                <p class="welcome-message">Enter your email address and we'll send you instructions to reset your password.</p>
            </div>
        </div>
    </div>

    <script src="/assets/js/preloader.js"></script>
    

  <script>
    function showToast(message, type = 'success') {
      let toastContainer = document.querySelector('.toast-container');
      if (!toastContainer) {
        toastContainer = document.createElement('div');
        toastContainer.className = 'toast-container';
        document.body.appendChild(toastContainer);
      }

      const toast = document.createElement('div');
      toast.className = `toast ${type}`;
      const icon = document.createElement('span');
      icon.className = 'toast-icon';
      icon.innerHTML = type === 'success' ? '✓' : '✗';
      const text = document.createElement('span');
      text.textContent = message;

      toast.appendChild(icon);
      toast.appendChild(text);
      toastContainer.appendChild(toast);

      setTimeout(() => {
        toast.classList.add('show');
      }, 100);

      setTimeout(() => {
        toast.classList.remove('show');
        setTimeout(() => {
          toast.remove();
        }, 300);
      }, 5000);
    }
      document.addEventListener("DOMContentLoaded", function () {
        let messageToShow = null;
        let iconToUse = 'error'; // Default to error

        // Check locals.message first (direct render)
        <% if (locals.message && message.length > 0) { %>
          messageToShow = "<%= locals.message %>";
          iconToUse = "<%= locals.icon === 'success' ? 'success' : 'error' %>";
        <% } else { %>
          // Fallback to query parameters (redirect)
          const urlParams = new URLSearchParams(window.location.search);
          const queryMessage = urlParams.get('message');
          const queryIcon = urlParams.get('icon') || 'warning';
          if (queryMessage) {
            messageToShow = queryMessage;
            iconToUse = queryIcon === 'success' ? 'success' : 'error';
            window.history.replaceState({}, document.title, window.location.pathname);
          }
        <% } %>

        // Show toast if a message exists
        if (messageToShow) {
          setTimeout(() => {
            showToast(messageToShow, iconToUse);
          }, 1200);
        }
        const form = document.getElementById('resetPasswordForm');
        const email = document.getElementById('emailInput');
        const emailError = document.getElementById('emailError');
        const themeToggleBtn = document.getElementById("theme-toggle");
        const body = document.body;
        const darkIcon = themeToggleBtn.querySelector(".dark-icon");
        const lightIcon = themeToggleBtn.querySelector(".light-icon");

        function validateEmail() {
          const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
          if (!emailRegex.test(email.value)) {
            emailError.style.display = "block";
            return false;
          } else {
            emailError.style.display = "none";
            return true;
          }
        }

        form.addEventListener("submit", function (event) {
          if (!validateEmail()) {
            event.preventDefault();
          }
        });

        email.addEventListener("input", function () {
          validateEmail();
        });

        // Theme Toggle Logic
        const savedTheme = localStorage.getItem("theme");
        if (savedTheme === "light") {
          body.classList.add("light-mode");
          darkIcon.style.display = "none";
          lightIcon.style.display = "block";
        } else {
          darkIcon.style.display = "block";
          lightIcon.style.display = "none";
        }

        themeToggleBtn.addEventListener("click", function () {
          body.classList.toggle("light-mode");
          const isLightMode = body.classList.contains("light-mode");
          if (isLightMode) {
            darkIcon.style.display = "none";
            lightIcon.style.display = "block";
          } else {
            darkIcon.style.display = "block";
            lightIcon.style.display = "none";
          }
          localStorage.setItem("theme", isLightMode ? "light" : "dark");
        });
      });
    </script>
</body>
</html>