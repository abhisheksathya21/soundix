<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Update Passwords</title>
    <link rel="icon" type="image/png" href="/assets/img/beat-logo-161616.png"> 
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <link rel="stylesheet" href="/assets/user-style/password.css">
    <style>
        .error-message {
            color: red;
            font-size: 0.9em;
            margin-top: 5px;
            display: none;
        }
        .input-error {
            border: 1px solid red;
        }
    </style>
</head>
<body>
    <%- include('../partials/user/header')%>
    <div class="page-container">
        <aside class="sidebar">
            <nav>
                <ul class="sidebar-menu">
                    <li><a href="/userProfile">Account Overview</a></li>
                    <li><a href="/orders">Order Details</a></li>
                    <li><a href="/addressManagement">Manage Address</a></li>
                    <li><a href="/wallet">Wallet</a></li>
                    <% if (!isGoogleUser) { %>
                    <li><a href="/password" class="active">Password</a></li>
                    <% } %>
                    <li><a href="/wishlist">Wishlist</a></li>
                </ul>
            </nav>
            <button class="logout-btn" onclick="logout()">Logout</button>
        </aside>

        <main class="content">
            <div class="view-port">
                <div id="password-update">
                    <h1>Update Password</h1>
                    <div class="overview-grid">
                        <div class="overview-card">
                            <form id="update-password-form">
                                <div id="current-password-step" class="form-step">
                                    <div class="form-group">
                                        <label for="current-password">Current Password:</label>
                                        <input
                                            type="password"
                                            id="current-password"
                                            name="currentPassword"
                                            required
                                            placeholder="Enter your current password"
                                        />
                                        <div id="current-password-error" class="error-message">
                                            Please enter your current password
                                        </div>
                                    </div>
                                    <div class="form-actions">
                                        <button type="button" id="next-step-btn" class="submit-btn">Next</button>
                                        <button type="button" id="cancel-btn" class="cancel-btn">Cancel</button>
                                    </div>
                                </div>

                                <div id="new-password-step" class="form-step hidden">
                                    <div class="form-group">
                                        <label for="new-password">New Password:</label>
                                        <input
                                            type="password"
                                            id="new-password"
                                            name="newPassword"
                                            
                                            placeholder="Enter your new password"
                                        />
                                        <div id="new-password-error" class="error-message">
                                            Password must contain at least 8 characters, including uppercase, lowercase, numbers, and special characters
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="confirm-password">Confirm New Password:</label>
                                        <input
                                            type="password"
                                            id="confirm-password"
                                            name="confirmPassword"
                                            
                                            placeholder="Re-enter your new password"
                                        />
                                        <div id="confirm-password-error" class="error-message">
                                            Passwords do not match
                                        </div>
                                    </div>
                                    <div class="form-actions">
                                        <button type="submit" class="submit-btn">Update Password</button>
                                        <button type="button" id="cancel-btn" class="cancel-btn">Cancel</button>
                                    </div>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </main>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        document.addEventListener("DOMContentLoaded", () => {
            const currentPasswordStep = document.getElementById("current-password-step");
            const newPasswordStep = document.getElementById("new-password-step");
            const nextStepBtn = document.getElementById("next-step-btn");
            const cancelBtns = document.querySelectorAll("#cancel-btn");
            const form = document.getElementById("update-password-form");
            
            const currentPasswordInput = document.getElementById("current-password");
            const newPasswordInput = document.getElementById("new-password");
            const confirmPasswordInput = document.getElementById("confirm-password");
            
            const currentPasswordError = document.getElementById("current-password-error");
            const newPasswordError = document.getElementById("new-password-error");
            const confirmPasswordError = document.getElementById("confirm-password-error");

            // Password validation regex
            const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8,}$/;

            // Real-time validation
            currentPasswordInput.addEventListener("input", function() {
                if (this.value.trim() === "") {
                    this.classList.add("input-error");
                    currentPasswordError.style.display = "block";
                } else {
                    this.classList.remove("input-error");
                    currentPasswordError.style.display = "none";
                }
            });

            newPasswordInput.addEventListener("input", function() {
                if (!passwordRegex.test(this.value)) {
                    this.classList.add("input-error");
                    newPasswordError.style.display = "block";
                } else {
                    this.classList.remove("input-error");
                    newPasswordError.style.display = "none";
                }
                validateConfirmPassword();
            });

            confirmPasswordInput.addEventListener("input", validateConfirmPassword);

            function validateConfirmPassword() {
                if (confirmPasswordInput.value !== newPasswordInput.value) {
                    confirmPasswordInput.classList.add("input-error");
                    confirmPasswordError.style.display = "block";
                } else {
                    confirmPasswordInput.classList.remove("input-error");
                    confirmPasswordError.style.display = "none";
                }
            }

            nextStepBtn.addEventListener("click", () => {
                if (currentPasswordInput.value.trim() === "") {
                    currentPasswordInput.classList.add("input-error");
                    currentPasswordError.style.display = "block";
                } else {
                    currentPasswordStep.classList.add("hidden");
                    newPasswordStep.classList.remove("hidden");
                }
            });

            cancelBtns.forEach((cancelBtn) =>
                cancelBtn.addEventListener("click", () => {
                    currentPasswordStep.classList.remove("hidden");
                    newPasswordStep.classList.add("hidden");
                    form.reset();
                    resetValidation();
                })
            );

            form.addEventListener("submit", async (e) => {
                e.preventDefault();

                // Final validation before submission
                let isValid = true;
                
                if (currentPasswordInput.value.trim() === "") {
                    currentPasswordInput.classList.add("input-error");
                    currentPasswordError.style.display = "block";
                    isValid = false;
                }

                if (!passwordRegex.test(newPasswordInput.value)) {
                    newPasswordInput.classList.add("input-error");
                    newPasswordError.style.display = "block";
                    isValid = false;
                }

                if (newPasswordInput.value !== confirmPasswordInput.value) {
                    confirmPasswordInput.classList.add("input-error");
                    confirmPasswordError.style.display = "block";
                    isValid = false;
                }

                if (!isValid) {
                    return;
                }

                const formData = new FormData(e.target);
                const data = {
                    currentPassword: formData.get("currentPassword"),
                    newPassword: formData.get("newPassword"),
                    confirmPassword: formData.get("confirmPassword"),
                };

                try {
                    const response = await fetch("/password", {
                        method: "POST",
                        headers: { "Content-Type": "application/json" },
                        body: JSON.stringify(data),
                    });

                    const result = await response.json();
                    if (response.ok) {
                        Swal.fire({
                            title: 'Success!',
                            text: 'Password updated successfully!',
                            icon: 'success',
                            confirmButtonText: 'OK'
                        }).then((result) => {
                            if (result.isConfirmed) {
                                window.location.reload();
                            }
                        });
                    } else {
                        console.error(result.message);
                    }
                } catch (error) {
                    console.error("Something went wrong, please try again later.");
                }
            });

            function resetValidation() {
                currentPasswordInput.classList.remove("input-error");
                newPasswordInput.classList.remove("input-error");
                confirmPasswordInput.classList.remove("input-error");
                currentPasswordError.style.display = "none";
                newPasswordError.style.display = "none";
                confirmPasswordError.style.display = "none";
            }
        });

        function logout() {
            Swal.fire({
                title: 'Are you sure?',
                text: "You will be logged out of your account!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#4A90E2',
                cancelButtonColor: '#ff4444',
                confirmButtonText: 'Yes, log out!'
            }).then((result) => {
                if (result.isConfirmed) {
                    window.location.href = '/logout'; 
                }
            });
        }
    </script>

    <%- include('../partials/user/footer')%>
</body>
</html>