<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Email Verification Template" />
    <meta name="keywords" content="Email Verification, OTP" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta http-equiv="X-UA-Compatible" content="ie=edge" />
    <title>Email Verification</title>
    <link
      href="https://fonts.googleapis.com/css2?family=Nunito+Sans:wght@300;400;600;700;800;900&display=swap"
      rel="stylesheet"
    />
    <link rel="stylesheet" href="/user-style/preloader.css" />

    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css"
    />
    <link rel="stylesheet" href="/user-style/verify-otp.css" />
  </head>
  <body>
    <!--? Preloader Start -->
    <div id="preloader-active">
      <div class="preloader">
        <div class="preloader-inner">
          <div class="preloader-img pere-text">
            <img src="assets/img/logo/logo.png" alt="" />
            <strong>Loading</strong>
          </div>
        </div>
      </div>
    </div>
    <!-- Preloader End -->
    <div class="container">
      <div class="heading_s1">
       <h3>Forgot Password - OTP Verification</h3>

      </div>
      <form id="otpForm" action="/forgot-password/verify-otp" method="post">

        <div class="form-group">
        <label for="otp-1" class="form-label">Enter the OTP sent to your email:</label>

          <div class="otp-input-container">
            <input
              type="text"
              id="otp-1"
              class="otp-input"
              maxlength="1"
              pattern="\d"
              required
            />
            <input
              type="text"
              id="otp-2"
              class="otp-input"
              maxlength="1"
              pattern="\d"
              required
            />
            <input
              type="text"
              id="otp-3"
              class="otp-input"
              maxlength="1"
              pattern="\d"
              required
            />
            <input
              type="text"
              id="otp-4"
              class="otp-input"
              maxlength="1"
              pattern="\d"
              required
            />
            <input
              type="text"
              id="otp-5"
              class="otp-input"
              maxlength="1"
              pattern="\d"
              required
            />
            <input
              type="text"
              id="otp-6"
              class="otp-input"
              maxlength="1"
              pattern="\d"
              required
            />
          </div>
        </div>
        <button type="submit" class="btn btn-primary">Verify Email</button>
        <div class="otp-timer">
          OTP expires in: <span id="timerValue">60</span> seconds
        </div>
        <button type="button" class="btn btn-secondary" id="resendBtn" disabled>
          Resend OTP
        </button>
      </form>
      <div class="text-muted">
        Already verified? <a href="/login">Login now</a>
      </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <script>
  // Wait for the DOM to fully load
  window.addEventListener("load", function () {
    // Get the preloader element
    var preloader = document.getElementById("preloader-active");

    // Add a fade-out effect
    preloader.style.transition = "opacity 0.6s";
    preloader.style.opacity = 0;

    // Remove the preloader from the DOM after the fade-out
    preloader.addEventListener("transitionend", function () {
      preloader.style.display = "none";
    });
  });
</script>


   <% if (locals.message && message.length > 0) { %>
    <script>
      document.addEventListener("DOMContentLoaded", function () {
        setTimeout(() => {
          Swal.fire({
            toast: true,
            position: "top",
            icon: "success",
            title: "<%= locals.message %>",
            showConfirmButton: false,
            timer: 5000,
            timerProgressBar: true,
            customClass: {
              popup: "custom-toast",
            },
          });
        }, 1000); // 1000ms = 1 second delay
      });
    </script>
<%}%>
    <script>
      document.addEventListener("DOMContentLoaded", function () {
        const otpInputs = document.querySelectorAll(".otp-input");
        const timerValue = document.getElementById("timerValue");
        const resendBtn = document.getElementById("resendBtn");
        let timer = 60;
        let timerInterval;

        otpInputs[0].focus();

        function startTimer() {
          timerInterval = setInterval(() => {
            timer--;
            timerValue.textContent = timer;
            if (timer <= 0) {
              clearInterval(timerInterval);
              otpInputs.forEach((input) => (input.disabled = true));
              timerValue.textContent = "Expired";
              resendBtn.disabled = false;
            }
          }, 1000);
        }

        function resetTimer() {
          clearInterval(timerInterval);
          timer = 60;
          timerValue.textContent = timer;
          otpInputs.forEach((input) => {
            input.disabled = false;
            input.value = "";
          });
          resendBtn.disabled = true;
          otpInputs[0].focus();
          startTimer();
        }

        startTimer();

        otpInputs.forEach((input, index) => {
          input.addEventListener("input", (e) => {
            if (input.value.length === 1) {
              const nextInput = otpInputs[index + 1];
              if (nextInput) nextInput.focus();
            }
          });

          input.addEventListener("keydown", (e) => {
            if (e.key === "Backspace" && input.value === "") {
              const previousInput = otpInputs[index - 1];
              if (previousInput) previousInput.focus();
            }
          });
        });

        document
          .getElementById("otpForm")
          .addEventListener("submit", async function (e) {
            e.preventDefault();
            const otpValue = Array.from(otpInputs)
              .map((input) => input.value)
              .join("");

            try {
              const response = await fetch("/forgot-password/verify-otp", {
                method: "POST",
                headers: {
                  "Content-Type": "application/json",
                },
                body: JSON.stringify({ otpInput: otpValue }),
              });

              const result = await response.json();
              if (response.ok && result.success) {
                   Swal.fire({
                  icon: "success",
                  title:
                    "<h3 style='color: #28a745;'>OTP Verified Successfully</h3>",
                  html: "<p style='color: #555;'>You will be redirected to reset your password.......</p>",
                  background: "#f9f9f9",
                  showConfirmButton: false,
                  timer: 2000,
                  timerProgressBar: true,
                  customClass: {
                    popup: "swal-custom-popup",
                  },
                })
                .then(() => {
                  window.location.href = "/reset-Password";
                });
              } else {
                Swal.fire({
                  icon: "error",
                  title: "<h3 style='color: #dc3545;'>Error</h3>",
                  html: `<p style='color: #555;'>${
                    result.message || "Invalid or expired OTP. Please try again.."
                  }</p>`,
                  background: "#f9f9f9",
                  confirmButtonColor: "#dc3545",
                  customClass: {
                    popup: "swal-custom-popup",
                     container: "swal-fixed-width",
                  },
                });
              }
            } catch (error) {
              Swal.fire({
                icon: "error",
                title: "Error",
                text: "Something went wrong. Please try again.",
              });
            }
          });

        resendBtn.addEventListener("click", async function () {
          try {
            const response = await fetch("/forgot-password/resend-otp", {
              method: "POST",
            });

            const result = await response.json();
            if (response.ok && result.success) {
              Swal.fire({
                toast: true,
                position: "top",
                icon: "success",
                title: "OTP Resent Successfully",
                showConfirmButton: false,
                timer: 1500,
                customClass: {
                  popup: "custom-toast",
                },
                timerProgressBar: true,
              });
              resetTimer();
            } else {
              Swal.fire({
                toast: true,
                position: "top",
                icon: "error",
                title: "Error",
                text:
                  result.message ||
                  "An error occurred resending OTP. Please try again.",
                showConfirmButton: false,
                timer: 3000,
                customClass: {
                  popup: "custom-toast",
                },
                timerProgressBar: true,
              });
            }
          } catch (error) {
            Swal.fire({
              toast: true,
              position: "top",
              icon: "error",
              title: "Error",
              text: "An error occurred resending OTP. Please try again",
              showConfirmButton: false,
              timer: 3000,
              customClass: {
                popup: "custom-toast",
              },
              timerProgressBar: true,
            });
          }
        });
      });
    </script>
  </body>
</html>
