<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Email Verification Template" />
    <meta name="keywords" content="Email Verification, OTP" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta http-equiv="X-UA-Compatible" content="ie=edge" />
    <title>Email Verification</title>
    <link
      href="https://fonts.googleapis.com/css2?family=Nunito+Sans:wght@300;400;600;700;800;900&display=swap"
      rel="stylesheet"
    />
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css"
    />
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css"
    />
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css"
    />
    <link rel="stylesheet" href="/user-style/verify-otp.css" />
  </head>
  <body>
    <div class="container">
      <div class="heading_s1">
        <h3>Email Verification</h3>
      </div>
      <form id="otpForm" action="/verify-otp" method="post">
        <div class="form-group">
          <label for="otp-1" class="form-label">Enter OTP:</label>
          <div class="otp-input-container">
            <input
              type="text"
              id="otp-1"
              class="otp-input"
              maxlength="1"
              pattern="\d"
              required
            />
            <input
              type="text"
              id="otp-2"
              class="otp-input"
              maxlength="1"
              pattern="\d"
              required
            />
            <input
              type="text"
              id="otp-3"
              class="otp-input"
              maxlength="1"
              pattern="\d"
              required
            />
            <input
              type="text"
              id="otp-4"
              class="otp-input"
              maxlength="1"
              pattern="\d"
              required
            />
            <input
              type="text"
              id="otp-5"
              class="otp-input"
              maxlength="1"
              pattern="\d"
              required
            />
            <input
              type="text"
              id="otp-6"
              class="otp-input"
              maxlength="1"
              pattern="\d"
              required
            />
          </div>
        </div>
        <button type="submit" class="btn btn-primary w-100 mb-3">
          Verify Email
        </button>
        <div class="otp-timer text-center">
          OTP expires in: <span id="timerValue">60</span> seconds
        </div>
        <button
          type="button"
          class="btn btn-secondary w-100 mt-3"
          id="resendBtn"
          disabled
        >
          Resend OTP
        </button>
      </form>
      <div class="text-muted">
        Already verified? <a href="/login">Login now</a>
      </div>
    </div>

   
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<% if (locals.message && message.length > 0) { %>
<script>
  document.addEventListener("DOMContentLoaded", function () {
    Swal.fire({
      toast: true,
      position: "top", // Display at the top of the screen
      icon: "success", // Icon type: 'warning', 'success', 'info', etc.
      title: "<%= locals.message %>", // Message from the server
      showConfirmButton: false, // No confirm button for a toast
      timer: 5000, // Auto-close after 5 seconds
      timerProgressBar: true, // Show a progress bar
      customClass: {
        popup: "custom-toast", // Custom class for styling
      },
    });
  });
</script>
<%}%>
<script>
  document.addEventListener("DOMContentLoaded", function () {
    const otpInputs = document.querySelectorAll(".otp-input");
    const timerValue = document.getElementById("timerValue");
    const resendBtn = document.getElementById("resendBtn");
    let timer = 60;
    let timerInterval;

    otpInputs[0].focus();

    function startTimer() {
      timerInterval = setInterval(() => {
        timer--;
        timerValue.textContent = timer;
        if (timer <= 0) {
          clearInterval(timerInterval);
          otpInputs.forEach((input) => (input.disabled = true));
          timerValue.textContent = "Expired";
          resendBtn.disabled = false;
        }
      }, 1000);
    }

    function resetTimer() {
      clearInterval(timerInterval);
      timer = 60;
      timerValue.textContent = timer;
      otpInputs.forEach((input) => {
        input.disabled = false;
        input.value = "";
      });
      resendBtn.disabled = true;
      otpInputs[0].focus();
      startTimer();
    }

    startTimer();

    otpInputs.forEach((input, index) => {
      input.addEventListener("input", (e) => {
        if (input.value.length === 1) {
          const nextInput = otpInputs[index + 1];
          if (nextInput) nextInput.focus();
        }
      });

      input.addEventListener("keydown", (e) => {
        if (e.key === "Backspace" && input.value === "") {
          const previousInput = otpInputs[index - 1];
          if (previousInput) previousInput.focus();
        }
      });
    });

    document.getElementById("otpForm").addEventListener("submit", async function (e) {
      e.preventDefault();
      const otpValue = Array.from(otpInputs)
        .map((input) => input.value)
        .join("");

      try {
        const response = await fetch("/verify-otp", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({ otpInput: otpValue }),
        });

        const result = await response.json();
       if (response.ok && result.success) {
  Swal.fire({
    icon: "success",
    title: "<h3 style='color: #28a745;'>OTP Verified Successfully</h3>",
    html: "<p style='color: #555;'>Thank you! You will be redirected shortly...</p>",
    background: "#f9f9f9",
    showConfirmButton: false,
    timer: 2000,
    timerProgressBar: true,
    customClass: {
      popup: "swal-custom-popup",
    },
  }).then(() => {
    window.location.href = "/";
  });
} else {
  Swal.fire({
    icon: "error",
    title: "<h3 style='color: #dc3545;'>Error</h3>",
    html: `<p style='color: #555;'>${result.message || "Invalid OTP. Please try again."}</p>`,
    background: "#f9f9f9",
    confirmButtonColor: "#dc3545",
    customClass: {
      popup: "swal-custom-popup",
    },
  });
}

      } catch (error) {
        Swal.fire({
          icon: "error",
          title: "Error",
          text: "Something went wrong. Please try again.",
        });
      }
    });

    resendBtn.addEventListener("click", async function () {
      try {
        const response = await fetch("/resend-otp", {
          method: "POST",
        });

        const result = await response.json();
        if (response.ok && result.success) {
          Swal.fire({
            toast: true,
            position: "top",
            icon: "success",
            title: "OTP Resent Successfully",
            showConfirmButton: false,
            timer: 1500,
            customClass: {
              popup: "custom-toast",
            },
            timerProgressBar: true,
          });
          resetTimer();
        } else {
          Swal.fire({
            toast: true,
            position: "top",
            icon: "error",
            title: "Error",
            text: result.message || "An error occurred resending OTP. Please try again.",
            showConfirmButton: false,
            timer: 3000,
            customClass: {
              popup: "custom-toast",
            },
            timerProgressBar: true,
          });
        }
      } catch (error) {
        Swal.fire({
          toast: true,
          position: "top",
          icon: "error",
          title: "Error",
          text: "An error occurred resending OTP. Please try again",
          showConfirmButton: false,
          timer: 3000,
          customClass: {
            popup: "custom-toast",
          },
          timerProgressBar: true,
        });
      }
    });
  });
</script>

  </body>
</html>
