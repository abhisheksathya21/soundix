<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Shop Page</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
    <link rel="stylesheet" href="/assets/user-style/shop.css">
</head>
<style>
    .toast-container {
        position: fixed;
        top: 110px;
        right: 20px;
        z-index: 1000;
    }

    .toast {
        background: white;
        color: #333;
        padding: 12px 24px;
        border-radius: 4px;
        margin-bottom: 10px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        display: flex;
        align-items: center;
        gap: 8px;
        opacity: 0;
        transform: translateX(100%);
        transition: all 0.3s ease;
    }

    .toast.show {
        opacity: 1;
        transform: translateX(0);
    }

    .toast.success {
        border-left: 4px solid #4CAF50;
    }

    .toast.error {
        border-left: 4px solid #f44336;
    }

    .toast-icon {
        font-size: 18px;
    }

    .toast.success .toast-icon {
        color: #4CAF50;
    }

    .toast.error .toast-icon {
        color: #f44336;
    }
</style>

<body>
    <%- include('../partials/user/header',{ searchQuery: locals.searchQuery, currentSort: locals.currentSort })%>

        <main class="container">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <% breadcrumbs.forEach(function(crumb, index) { %>
                        <% if (index===breadcrumbs.length - 1) { %>
                            <li class="breadcrumb-item active" aria-current="page">
                                <%= crumb.name %>
                            </li>
                            <% } else { %>
                                <li class="breadcrumb-item">
                                    <a href="<%= crumb.url %>">
                                        <%= crumb.name %>
                                    </a>
                                </li>
                                <% } %>
                                    <% }); %>
                </ol>
            </nav>


            <section class="products">
                <div class="category-filter">
                    <h3>Categories</h3>
                    <ul>
                        <li>
                            <a href="/shop" class="category-link <%= !currentCategory ? 'active' : '' %>">
                                All Categories
                            </a>
                        </li>
                        <% categories.forEach(function(category) { %>
                            <li>
                                <a href="/shop?category=<%= category._id %><%= searchQuery ? '&search=' + searchQuery : '' %><%= currentSort ? '&sort=' + currentSort : '' %>"
                                    class="category-link <%= currentCategory === category._id.toString() ? 'active' : '' %>">
                                    <%= category.name %>
                                </a>
                            </li>
                            <% }); %>
                    </ul>
                </div>
                <div class="sort-options-container">
                    <select class="sort-dropdown" onchange="window.location.href=this.value">
                        <option value="/shop" <%=!currentSort ? 'selected' : '' %>>Sort By</option>

                        <option value="/shop?sort=newest<%= searchQuery ? '&search=' + searchQuery : '' %>"
                            <%=currentSort==='newest' ? 'selected' : '' %>>
                            Newest Arrivals
                        </option>

                        <option value="/shop?sort=priceHighLow<%= searchQuery ? '&search=' + searchQuery : '' %>"
                            <%=currentSort==='priceHighLow' ? 'selected' : '' %>>
                            Price High to Low
                        </option>

                        <option value="/shop?sort=priceLowHigh<%= searchQuery ? '&search=' + searchQuery : '' %>"
                            <%=currentSort==='priceLowHigh' ? 'selected' : '' %>>
                            Price Low to High
                        </option>

                        <option value="/shop?sort=aToZ<%= searchQuery ? '&search=' + searchQuery : '' %>"
                            <%=currentSort==='aToZ' ? 'selected' : '' %>>
                            A-Z
                        </option>

                        <option value="/shop?sort=zToA<%= searchQuery ? '&search=' + searchQuery : '' %>"
                            <%=currentSort==='zToA' ? 'selected' : '' %>>
                            Z-A
                        </option>
                    </select>
                </div>
                <!-- Add this category filter section -->


                <!-- Add this after your sort-options div -->
                <% if (searchQuery && products.length===0) { %>
                    <div class="no-results">
                        <p>No products found for "<%= searchQuery %>"</p>
                        <a href="/shop" class="clear-search">Clear Search</a>
                    </div>
                    <% } %>
                        <div class="product-grid">
                            <% for (i=0; i < products.length; i++) { %>
                                <div class="product-card">
                                    <div class="product-image">
                                        <a href="/productDetails?id=<%= products[i]._id %>">
                                            <img src="<%= products[i].productImage[0] %>"
                                                alt="<%= products[i].productName %>">
                                        </a>
                                        <button class="wishlist-btn" data-product-id="<%= products[i]._id %>">
                                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24"
                                                viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"
                                                stroke-linecap="round" stroke-linejoin="round" class="heart-icon">
                                                <path
                                                    d="M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z">
                                                </path>
                                            </svg>
                                        </button>
                                    </div>
                                    <div class="product-info">
                                        <h3 class="product-name">
                                            <%= products[i].productName %>
                                        </h3>

                                        <!-- Display Offer if Available -->
                                        <% if (products[i].bestOffer) { %>
                                            <span class="offer-label">
                                                <%= products[i].bestOffer.discountPercentage %>% OFF
                                            </span>
                                            <% } %>

                                                <!-- Show Original Price Only if Discount Exists -->
                                                <% if (products[i].bestOffer) { %>
                                                    <span class="product-price original-price">₹<s>
                                                            <%= products[i].salePrice %>
                                                        </s></span>
                                                    <% } %>

                                                        <!-- Final Price After Discount -->
                                                        <span class="product-price final-price">₹<%=
                                                                products[i].finalPrice.toFixed(2) %></span>
                                    </div>

                                    <div class="product-actions">
                                        <button class="add-to-cart" data-product-id="<%= products[i]._id %>"
                                            data-price="<%= products[i].finalPrice %>">
                                            Add to cart
                                        </button>
                                    </div>
                                </div>
                                <% } %>
                        </div>




            </section>
            <div class="pagination">
                <% if (pagination.hasPrevPage) { %>
                    <a href="<%= generatePageUrl(pagination.currentPage - 1) %>" class="pagination-link">&laquo;
                        Previous</a>
                    <% } %>

                        <% pagination.links.forEach(link=> { %>
                            <% if (link.active) { %>
                                <span class="pagination-link active">
                                    <%= link.page %>
                                </span>
                                <% } else { %>
                                    <a href="<%= link.url %>" class="pagination-link">
                                        <%= link.page %>
                                    </a>
                                    <% } %>
                                        <% }) %>

                                            <% if (pagination.hasNextPage) { %>
                                                <a href="<%= generatePageUrl(pagination.currentPage + 1) %>"
                                                    class="pagination-link">Next &raquo;</a>
                                                <% } %>

                                                    <div class="pagination-info">
                                                        Showing <%= (pagination.currentPage - 1) * 12 + 1 %> -
                                                            <%= Math.min(pagination.currentPage * 12,
                                                                pagination.totalProducts) %>
                                                                of <%= pagination.totalProducts %> products
                                                    </div>
            </div>

            <section class="features">
                <div class="feature">
                    <i class="fas fa-box"></i>
                    <h3>Free Shipping Method</h3>
                    <p>Enjoy free shipping on all orders.</p>
                </div>
                <div class="feature">
                    <i class="fas fa-lock"></i>
                    <h3>Secure Payment System</h3>
                    <p>Your payment information is safe with us.</p>
                </div>
                <div class="feature">
                    <i class="fas fa-undo"></i>
                    <h3>Easy Return Policy</h3>
                    <p>Hassle-free returns within 30 days.</p>
                </div>
            </section>
        </main>
        <br>
        <br>
        <div class="toast-container"></div>
        <%- include('../partials/user/footer')%>

            <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
            <script>
                document.addEventListener("DOMContentLoaded", function () {
                    // First, fetch initial wishlist state
                    async function fetchWishlistState() {
                        try {
                            const response = await fetch("/wishlist/state");
                            const data = await response.json();
                            if (data.success) {
                                // Update heart icons for items in wishlist
                                data.wishlistItems.forEach(itemId => {
                                    const heartIcon = document.querySelector(
                                        `.wishlist-btn[data-product-id="${itemId}"] .heart-icon`
                                    );
                                    if (heartIcon) {
                                        heartIcon.setAttribute('fill', 'red');
                                    }
                                });
                            }
                        } catch (error) {
                            console.error("Error fetching wishlist state:", error);
                        }
                    }

                    // Call this when page loads
                    fetchWishlistState();

                    // Add click handlers for wishlist buttons
                    const wishlistButtons = document.querySelectorAll(".wishlist-btn");

                    wishlistButtons.forEach(button => {
                        button.addEventListener("click", async function (e) {
                            e.preventDefault();

                            // Get product ID from the button itself
                            const productId = this.getAttribute('data-product-id');
                            const heartIcon = this.querySelector('.heart-icon');

                            try {
                                const response = await fetch("/wishlist/toggle", {
                                    method: "POST",
                                    headers: {
                                        "Content-Type": "application/json"
                                    },
                                    body: JSON.stringify({ productId })
                                });

                                const data = await response.json();

                                if (data.success) {
                                    // Toggle heart fill based on response
                                    heartIcon.setAttribute('fill', data.isAdded ? 'red' : 'none');
                                    showToast(data.message);
                                }
                            } catch (error) {
                                console.error("Error toggling wishlist:", error);
                                showToast("Failed to update wishlist", "error");
                            }
                        });
                    });
                });
            </script>
            <script>
                const showToast = (message, type = 'success') => {
                    const toastContainer = document.querySelector('.toast-container');

                    const toast = document.createElement('div');
                    toast.className = `toast ${type}`;

                    const icon = type === 'success' ? 'check-circle' : 'exclamation-circle';
                    toast.innerHTML = `
                <i class="fas fa-${icon} toast-icon"></i>
                <span>${message}</span>
            `;

                    toastContainer.appendChild(toast);

                    // Trigger reflow to enable transition
                    toast.offsetHeight;

                    // Show the toast
                    setTimeout(() => toast.classList.add('show'), 10);

                    // Remove the toast after 3 seconds
                    setTimeout(() => {
                        toast.classList.remove('show');
                        setTimeout(() => toast.remove(), 300);
                    }, 3000);
                };

                document.addEventListener("DOMContentLoaded", function () {
                    const addToCartButtons = document.querySelectorAll(".add-to-cart");

                    addToCartButtons.forEach((button) => {
                        button.addEventListener("click", async function (e) {
                            try {
                                const productId = this.getAttribute("data-product-id");
                                const price = parseFloat(this.getAttribute("data-price"));

                                const response = await fetch("/cart-add", {
                                    method: "POST",
                                    headers: {
                                        "Content-Type": "application/json",
                                    },
                                    body: JSON.stringify({
                                        productId,
                                        price,
                                        quantity: 1,
                                    }),
                                });

                                const result = await response.json();

                                if (!response.ok) {
                                    throw new Error(result.error || "Failed to add to cart");
                                }

                                showToast("Product added to cart successfully!");
                                updateCartCount(result.items.length);
                            } catch (error) {
                                console.error("Error adding to cart:", error);
                                showToast(error.message, "error");
                            }
                        });
                    });

                    function updateCartCount(count) {
                        const cartCountElement = document.querySelector(".cart-count");
                        if (cartCountElement) {
                            cartCountElement.textContent = count;
                        }
                    }
                });
            </script>
</body>

</html>