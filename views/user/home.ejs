<%- include('../partials/user/header')%>
<main>
  <link rel="stylesheet" href="/assets/user-style/home.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">

  <!-- Hero Slider -->
 
  <style>
  
</style>
  <div class="content">
<section class="hero">
   <img src="/assets/img/hp-register--fitpro-solo3.png.large.2x.png" alt="Floating PNG" />
      <div>
        <h1>Welcome to SoundZone</h1>
        <p>Experience the ultimate sound like never before.</p>
      </div>
     
    </section>

  <!-- New Arrivals -->
 <section class="new-arrivals">
        <div class="container">
            <h2 class="section-title">New Arrivals</h2>
            <div class="product-grid">
                <% for (let i = Math.max(products.length - 4, 0); i < products.length; i++) { %>
                    <div class="product-card">
                        <img src="<%= products[i].productImage[0] %>" alt="<%= products[i].productName %>">
                        <div class="product-info">
                            <h3><a href="/productDetails?id=<%= products[i]._id %>"><%= products[i].productName %></a></h3>
                            <span class="price">&#8377;<%= products[i].salePrice %></span>
                        </div>
                    </div>
                <% } %>
            </div>
        </div>
    </section>

  <!-- Popular Items -->
  <section class="popular-items">
    <div class="container">
      <h2 class="section-title">Popular Items</h2>
      <p class="section-description">Discover our most loved products, chosen by customers like you.</p>
   <div class="product-grid">
    <% for (i = 0; i < products.length; i++) { %>
        <div class="product-card">
            <div class="product-image">
                <a href="/productDetails?id=<%= products[i]._id %>">
                    <img src="<%= products[i].productImage[0] %>" alt="<%= products[i].productName %>">
                </a>
                <button class="wishlist-btn" data-product-id="<%= products[i]._id %>">
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" 
                         viewBox="0 0 24 24" fill="none" stroke="currentColor" 
                         stroke-width="2" stroke-linecap="round" stroke-linejoin="round" 
                         class="heart-icon">
                        <path d="M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z"></path>
                    </svg>
                </button>
            </div>
            <div class="product-info">
                <h3 class="product-name">
                    <%= products[i].productName %>
                </h3>

                <!-- Display Offer if Available -->
                <% if (products[i].bestOffer) { %>
                    <span class="offer-label">
                        <%= products[i].bestOffer.discountPercentage %>% OFF
                    </span>
                <% } %>

                <!-- Show Original Price Only if Discount Exists -->
                <% if (products[i].bestOffer) { %>
                    <span class="product-price original-price">₹<s><%= products[i].salePrice %></s></span>
                <% } %>

                <!-- Final Price After Discount -->
                <span class="product-price final-price">₹<%= products[i].finalPrice.toFixed(2) %></span>
            </div>

            <div class="product-actions">
                <button class="add-to-cart" data-product-id="<%= products[i]._id %>" data-price="<%= products[i].finalPrice %>">
                    Add to cart
                </button>
            </div>
        </div>
    <% } %>
</div>

    </div>
  </section>

  <!-- Banner -->
 

  <!-- Shop Features -->
  
</main>
</div>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<!-- Add this HTML structure right after your main content, before the footer -->
<div class="toast-container"></div>

<script>
class ToastNotification {
    constructor() {
        this.container = document.querySelector('.toast-container');
        if (!this.container) {
            this.container = document.createElement('div');
            this.container.className = 'toast-container';
            document.body.appendChild(this.container);
        }
    }

    show(message, type = 'success') {
        const toast = document.createElement('div');
        toast.className = `toast ${type}`;
        
        const icon = document.createElement('i');
        icon.className = `toast-icon fas ${type === 'success' ? 'fa-check-circle' : 'fa-exclamation-circle'}`;
        
        const textDiv = document.createElement('div');
        textDiv.textContent = message;
        
        toast.appendChild(icon);
        toast.appendChild(textDiv);
        this.container.appendChild(toast);
        
        // Trigger reflow to ensure transition works
        toast.offsetHeight;
        
        // Show the toast
        setTimeout(() => {
            toast.classList.add('show');
        }, 10);
        
        // Remove the toast after 3 seconds
        setTimeout(() => {
            toast.classList.remove('show');
            setTimeout(() => {
                this.container.removeChild(toast);
            }, 300);
        }, 3000);
    }
}

// Initialize toast notification system
const toast = new ToastNotification();

document.addEventListener("DOMContentLoaded", function () {
    const addToCartButtons = document.querySelectorAll(".popular-items .add-to-cart");

    addToCartButtons.forEach((button) => {
        button.addEventListener("click", async function (e) {
            try {
                const productId = this.getAttribute("data-product-id");
                const price = parseFloat(this.getAttribute("data-price"));

                const response = await fetch("/cart-add", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({
                        productId,
                        price,
                        quantity: 1,
                    }),
                });

                const result = await response.json();

                if (!response.ok) {
                    throw new Error(result.error || "Failed to add to cart");
                }

                // Show success toast
                toast.show("Product added to cart successfully!", "success");

                // Update cart count if needed
                updateCartCount(result.items.length);
            } catch (error) {
                console.error("Error adding to cart:", error);
                
                // Show error toast
                toast.show(error.message, "error");
            }
        });
    });

    // Optional: Function to update cart count in header
    function updateCartCount(count) {
        const cartCountElement = document.querySelector(".cart-count");
        if (cartCountElement) {
            cartCountElement.textContent = count;
        }
    }
});
</script>
<script>
    document.addEventListener("DOMContentLoaded", function() {
    // Function to fetch initial wishlist state
    async function fetchWishlistState() {
        try {
            const response = await fetch("/wishlist/state");
            const data = await response.json();
            if (data.success) {
                // Update heart icons for items in wishlist
                data.wishlistItems.forEach(itemId => {
                    const heartIcon = document.querySelector(
                        `.wishlist-btn[data-product-id="${itemId}"] .heart-icon`
                    );
                    if (heartIcon) {
                        heartIcon.setAttribute('fill', 'red');
                    }
                });
            }
        } catch (error) {
            console.error("Error fetching wishlist state:", error);
        }
    }

    // Call this when page loads
    fetchWishlistState();

    // Add click handlers for wishlist buttons
    const wishlistButtons = document.querySelectorAll(".wishlist-btn");
    
    wishlistButtons.forEach(button => {
        button.addEventListener("click", async function(e) {
            e.preventDefault();
            
            const productId = this.getAttribute('data-product-id');
            const heartIcon = this.querySelector('.heart-icon');
            
            try {
                const response = await fetch("/wishlist/toggle", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify({ productId })
                });
                
                const data = await response.json();
                
                if (data.success) {
                    heartIcon.setAttribute('fill', data.isAdded ? 'red' : 'none');
                    toast.show(data.message);
                }
            } catch (error) {
                console.error("Error toggling wishlist:", error);
                toast.show("Failed to update wishlist", "error");
            }
        });
    });
});
</script>

<%- include('../partials/user/footer')%>
