<%- include('../partials/user/header')%>
<main>
  <link rel="stylesheet" href="/assets/user-style/home.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">

  <!-- Hero Slider -->
 
  
  <div class="content">
<section class="hero">
   <img src="/assets/img/hp-register--fitpro-solo3.png.large.2x.png" alt="Floating PNG" />
      <div>
        <h1>Welcome to SoundZone</h1>
        <p>Experience the ultimate sound like never before.</p>
      </div>
     
    </section>

  <!-- New Arrivals -->
 <section class="new-arrivals">
        <div class="container">
            <h2 class="section-title">New Arrivals</h2>
            <div class="product-grid">
                <% for (let i = Math.max(products.length - 4, 0); i < products.length; i++) { %>
                    <div class="product-card">
                        <img src="<%= products[i].productImage[0] %>" alt="<%= products[i].productName %>">
                        <div class="product-info">
                            <h3><a href="/productDetails?id=<%= products[i]._id %>"><%= products[i].productName %></a></h3>
                            <span class="price">&#8377;<%= products[i].salePrice %></span>
                        </div>
                    </div>
                <% } %>
            </div>
        </div>
    </section>

  <!-- Popular Items -->
  <section class="popular-items">
    <div class="container">
      <h2 class="section-title">Popular Items</h2>
      <p class="section-description">Discover our most loved products, chosen by customers like you.</p>
    <div class="product-grid">
    <% for (i = 0; i < products.length; i++) { %>
        <div class="product-card">
            <div class="product-image">
                <img src="<%= products[i].productImage[0] %>" alt="<%= products[i].productName %>">
                <button class="wishlist-btn" aria-label="Add to wishlist">
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="heart-icon"><path d="M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z"></path></svg>
                </button>
                <div class="product-actions">
                    <button class="add-to-cart" data-product-id="<%= products[i]._id %>" data-price="<%= products[i].salePrice %>">
                        Add to cart
                    </button>
                </div>
            </div>
            <div class="product-info">
                <h3 class="product-name">
                    <a href="/productDetails?id=<%= products[i]._id %>"><%= products[i].productName %></a>
                </h3>
                <span class="product-price">â‚¹<%= products[i].salePrice %></span>
            </div>
        </div>
    <% } %>
</div>
    </div>
  </section>

  <!-- Banner -->
 

  <!-- Shop Features -->
  
</main>
</div>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
document.addEventListener("DOMContentLoaded", function () {
  // Get all add to cart buttons in the popular items section
  const addToCartButtons = document.querySelectorAll(".popular-items .add-to-cart");

  addToCartButtons.forEach((button) => {
    button.addEventListener("click", async function (e) {
      try {
        const productId = this.getAttribute("data-product-id");
        const price = parseFloat(this.getAttribute("data-price"));

        const response = await fetch("/cart-add", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({
            productId,
            price,
            quantity: 1,
          }),
        });

        const result = await response.json(); // Parse the response as JSON

        if (!response.ok) {
          // Backend returned an error
          throw new Error(result.error || "Failed to add to cart");
        }

        // Show success toast message
        Swal.fire({
          position: "center",
          icon: "success",
          title: "Success!",
          text: "Product added to cart successfully!",
          showConfirmButton: true,
          confirmButtonText: "OK",
        });

        // Optional: Update cart count in header if you have one
        updateCartCount(result.items.length);
      } catch (error) {
        console.error("Error adding to cart:", error);

        // Show error toast message
        Swal.fire({
          icon: "error", // Error icon
          title: "Failed!", // Main title
          text: error.message, // Use the error message from backend
          position: "center",
          showConfirmButton: true,
          confirmButtonText: "OK",
        });
      }
    });
  });

  // Optional: Function to update cart count in header
  function updateCartCount(count) {
    const cartCountElement = document.querySelector(".cart-count");
    if (cartCountElement) {
      cartCountElement.textContent = count;
    }
  }
});
</script>

<%- include('../partials/user/footer')%>
