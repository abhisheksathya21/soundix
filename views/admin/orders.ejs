<%-include('../partials/admin/header') %>

    <link rel="stylesheet" href="/assets/admin-style/order.css">
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600&display=swap" rel="stylesheet">
    <main class="main-content" id="mainContent">
        <div class="content-header row mb-4">
            <h2 class="content-title">Orders</h2>
        </div>
        <div class="container">

            <div class="table-wrapper">
                <table class="order-table">
                    <thead>
                        <tr>
                            <th>Customer</th>
                            <th>Email</th>
                            <th>Total Price</th>
                            <th>Status</th>
                            <th>Date</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% orders.forEach(order=> { %>
                            <tr>
                                <td>
                                    <%= order.userId.fullname %>
                                </td>
                                <td>
                                    <%= order.userId.email %>
                                </td>
                                <td>â‚¹<%= order.totalAmount.toFixed(2) %>
                                </td>
                                <td>
                                    <select class="status-select <%= order.status.toLowerCase() %>"
                                        data-order-id="<%= order._id %>" <%=order.status==='Cancelled' ||
                                        order.status==='Delivered' ? 'disabled' : '' %>>
                                        <option value="Pending" <%=order.status==='Pending' ? 'selected' : '' %>>Pending
                                        </option>
                                        <option value="Processing" <%=order.status==='Processing' ? 'selected' : '' %>
                                            >Processing</option>
                                        <option value="Shipped" <%=order.status==='Shipped' ? 'selected' : '' %>>Shipped
                                        </option>
                                        <option value="Delivered" <%=order.status==='Delivered' ? 'selected' : '' %>
                                            >Delivered</option>
                                        <option value="Cancelled" <%=order.status==='Cancelled' ? 'selected' : '' %>
                                            >Cancelled</option>
                                    </select>
                                </td>
                                <td>
                                    <%= new Date(order.orderDate).toLocaleDateString() %>
                                </td>
                                <td>
                                    <button class="view-details-btn" data-order-id="<%= order._id %>">View
                                        Details</button>
                                </td>
                            </tr>
                            <% }); %>
                    </tbody>
                </table>
            </div>

            <!-- Pagination -->
            <div class="pagination-container mt-4">
                <% if (currentPage> 1) { %>
                    <a href="?page=1" class="pagination-link">First</a>
                    <a href="?page=<%= currentPage - 1 %>" class="pagination-link">&laquo; Previous</a>
                    <% } %>
                        <% for (let i=1; i <=totalPages; i++) { %>
                            <% if (i===currentPage) { %>
                                <span class="current-page">
                                    <%= i %>
                                </span>
                                <% } else { %>
                                    <a href="?page=<%= i %>" class="pagination-link">
                                        <%= i %>
                                    </a>
                                    <% } %>
                                        <% } %>
                                            <% if (currentPage < totalPages) { %>
                                                <a href="?page=<%= currentPage + 1 %>" class="pagination-link">Next
                                                    &raquo;</a>
                                                <a href="?page=<%= totalPages %>" class="pagination-link">Last</a>
                                                <% } %>
            </div>
        </div>

        <!-- Order Details Modal -->
        <div id="orderModal" class="modal">
            <div class="modal-content">
                <span class="close">&times;</span>
                <div class="modal-header">
                    <h2>Order Details</h2>
                </div>
                <div class="modal-body">
                    <div class="order-info">
                        <div class="info-section">
                            <h3>Customer Information</h3>
                            <div class="detail-row">
                                <strong>Name:</strong>
                                <span id="modalCustomer"></span>
                            </div>
                            <div class="detail-row">
                                <strong>Email:</strong>
                                <span id="modalEmail"></span>
                            </div>
                            <div class="detail-row">
                                <strong>Order Date:</strong>
                                <span id="modalDate"></span>
                            </div>
                            <div class="detail-row">
                                <strong>Status:</strong>
                                <span id="modalStatus"></span>
                            </div>
                        </div>

                        <div class="info-section">
                            <h3>Products</h3>
                            <div class="products-grid" id="modalProducts">
                                <!-- Products will be dynamically inserted here -->
                            </div>
                        </div>

                        <div class="info-section">
                            <h3>Order Summary</h3>
                            <div class="detail-row">
                                <strong>Subtotal:</strong>
                                <span id="modalSubtotal"></span>
                            </div>
                            <div class="detail-row">
                                <strong>Shipping:</strong>
                                <span id="modalShipping"></span>
                            </div>
                            <div class="detail-row total">
                                <strong>Total:</strong>
                                <span id="modalPrice"></span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- External Libraries -->
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

        <script>
            document.addEventListener('DOMContentLoaded', function () {
                const modal = document.getElementById('orderModal');
                const closeBtn = document.querySelector('.modal .close');
                const viewDetailsBtns = document.querySelectorAll('.view-details-btn');
                const orders =<%-JSON.stringify(orders)%>;

              
                async function updateOrderStatus(orderId, status, selectElement) {
                    try {
                        // Show confirmation dialog for cancellation
                        if (status === 'Cancelled') {
                            const result = await Swal.fire({
                                title: 'Are you sure?',
                                text: "This will cancel the order and return items to stock. This action cannot be undone!",
                                icon: 'warning',
                                showCancelButton: true,
                                confirmButtonColor: '#3085d6',
                                cancelButtonColor: '#d33',
                                confirmButtonText: 'Yes, cancel it!',
                            });

                            if (!result.isConfirmed) {
                                // Reset select to previous value if user cancels
                                const order = orders.find((o) => o._id === orderId);
                                selectElement.value = order.status;
                                return;
                            }
                        }

                        const response = await fetch('/admin/update-order-status', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                            },
                            body: JSON.stringify({ orderId, status }),
                        });

                        const data = await response.json();

                        if (!response.ok) {
                            throw new Error(data.error || 'Failed to update status');
                        }

                        // Update the select element's state
                        selectElement.className = 'status-select ' + status.toLowerCase();
                        if (status === 'Cancelled' || status === 'Delivered') {
                            selectElement.disabled = true;
                        }

                        // Show success message
                        Swal.fire({
                            icon: 'success',
                            title: 'Success',
                            text: 'Order status updated successfully!',
                            timer: 2000,
                            showConfirmButton: false,
                        });

                        // Update the order in the orders array
                        const orderIndex = orders.findIndex((o) => o._id === orderId);
                        if (orderIndex !== -1) {
                            orders[orderIndex].status = status;
                        }
                    } catch (error) {
                        console.error('Error updating status:', error);
                        // Show error message and reset select to previous value
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: error.message || 'Failed to update order status.',
                        });
                        const order = orders.find((o) => o._id === orderId);
                        selectElement.value = order.status;
                    }
                }


                async function cancelOrderProduct(orderId, productId) {


                    try {
                        console.log('Cancelling order:', orderId, 'product:', productId); //
                        const result = await Swal.fire({
                            title: 'Are you sure?',
                            text: `This will cancel the product from the order. This action cannot be undone! Cancelling order: ${orderId}, product: ${productId}`,
                            icon: 'warning',
                            showCancelButton: true,
                            confirmButtonColor: '#3085d6',
                            cancelButtonColor: '#d33',
                            confirmButtonText: 'Yes, cancel it!',
                        });

                        if (!result.isConfirmed) {
                            return;
                        }
                        console.log('Cancelling order:', orderId, 'product:', productId); //

                        const response = await fetch('/admin/cancel-order', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                            },
                            body: JSON.stringify({ orderId, productId }),
                        });

                        console.log('Response:', response); //


                        const data = await response.json();
                        console.log(data, 'kit');

                        if (!response.ok) {
                            throw new Error(data.message || 'Failed to cancel product');
                        }


                        Swal.fire({
                            icon: 'success',
                            title: 'Product Cancelled',
                            text: 'The product has been successfully cancelled from the order.',
                            timer: 2000,
                            showConfirmButton: false,
                        });


                        location.reload();
                    } catch (error) {
                        console.error('Error cancelling product:', error);
                        Swal.fire({
                            icon: 'error',
                            title: 'Cancellation Failed',
                            text: error.message || 'Unable to cancel the product',
                        });
                    }
                }


                document.addEventListener('click', function (event) {
                    if (event.target.classList.contains('cancel-product-btn')) {
                        const orderId = event.target.dataset.orderId;
                        const productId = event.target.dataset.productId;
                        cancelOrderProduct(orderId, productId);
                    }
                });


                document.querySelectorAll('.status-select').forEach((select) => {
                    select.addEventListener('change', function () {
                        const orderId = this.dataset.orderId;
                        const newStatus = this.value;
                        updateOrderStatus(orderId, newStatus, this);
                    });
                });


                viewDetailsBtns.forEach((btn) => {
                    btn.addEventListener('click', function () {
                        const orderId = this.dataset.orderId;
                        const order = orders.find((o) => o._id === orderId);

                        if (!order) return;

                        // Update modal content
                        document.getElementById('modalCustomer').textContent = order.userId.fullname;
                        document.getElementById('modalEmail').textContent = order.userId.email;
                        document.getElementById('modalDate').textContent = new Date(order.orderDate).toLocaleDateString();
                        document.getElementById('modalStatus').textContent = order.status;
                        document.getElementById('modalPrice').textContent = `â‚¹${order.totalAmount.toFixed(2)}`;
                        document.getElementById('modalSubtotal').textContent = `â‚¹${order.totalAmount.toFixed(2)}`;
                        document.getElementById('modalShipping').textContent = 'Free';


                        const productsGrid = document.getElementById('modalProducts');
                        productsGrid.innerHTML = order.items
                            .map(
                                (item) => `
                    <div class="product-card">
                        <img src="${item.productId.productImage[0]}" alt="${item.productId.productName}">
                        <h4>${item.productId.productName}</h4>
                        <p>Quantity: ${item.quantity}</p>
                        <p class="price">â‚¹${item.productId.salePrice.toFixed(2)}</p>
                        <button class="cancel-product-btn" 
                                data-order-id="${orderId}" 
                                data-product-id="${item.productId._id}">
                            Cancel
                        </button>
                    </div>
                `
                            )
                            .join('');


                        modal.style.display = 'block';
                    });
                });


                closeBtn.onclick = function () {
                    modal.style.display = 'none';
                };


                window.onclick = function (event) {
                    if (event.target == modal) {
                        modal.style.display = 'none';
                    }
                };
            });
        </script>

        <%-include('../partials/admin/footer') %>