
<%- include("../partials/admin/header") %>

<main class="main-content" id="mainContent">
  <link
    rel="stylesheet"
    href="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.css"
  />
  <link
    rel="stylesheet"
    href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css"
  />
  <link rel="stylesheet" href="/admin-style/category.css">

  <section class="content-main">
    <!-- Add Category Form -->
    <div class="card add-category-form">
      <div class="card-header">
        <h3>Add New Category</h3>
      </div>
      <div class="card-body">
        <form method="post" action="/admin/addCategory" onsubmit="return handleformSubmit(event)">
          <div class="mb-4">
            <label for="product_name" class="form-label">Category Name</label>
            <input
              type="text"
              name="name"
              placeholder="Enter category name"
              class="form-control"
              id="product_name"
              required
            />
            <div id="name-error" class="error-message"></div>
          </div>

          <div class="mb-4">
            <label for="descriptionId" class="form-label">Description</label>
            <textarea
              placeholder="Enter category description"
              name="description"
              class="form-control"
              id="descriptionId"
              required
            ></textarea>
            <div id="description-error" class="error-message"></div>
          </div>

          <button class="btn btn-primary" type="submit">Create Category</button>
        </form>
      </div>
    </div>

    <!-- Category List Table -->
    <div class="card category-list-card mt-5">
      <div class="card-header">
        <h3>Category List</h3>
      </div>
      <div class="card-body">
        <div class="table-responsive">
          <table class="table table-hover">
            <thead>
              <tr>
                <th>Name</th>
                <th>Description</th>
                <th>Status</th>
                <th>Action</th>
                <th>Edit</th>
              </tr>
            </thead>
            <tbody>
              <% categories.forEach((category) => { %>
              <tr>
                <td><%= category.name %></td>
                <td><%= category.description %></td>
                <td>
                  <% if (category.isListed) { %>
                  <span class="badge bg-primary">Listed</span>
                  <% } else { %>
                  <span class="badge bg-danger">Unlisted</span>
                  <% } %>
                </td>
                <td>
                  <% if (category.isListed) { %>
                  <a href="/admin/listcategory?id=<%= category._id %>" class="btn btn-danger">Unlist</a>
                  <% } else { %>
                  <a href="/admin/Unlistcategory?id=<%= category._id %>" class="btn btn-success">List</a>
                  <% } %>
                </td>
                <td>
                  <a href="/admin/editcategory?id=<%= category._id %>" class="btn btn-info text-white">Edit</a>
                </td>
              </tr>
              <% }); %>
            </tbody>
          </table>
        </div>
      </div>
    </div>

    <!-- Pagination -->
    <div class="pagination-container mt-4">
      <% if (currentPage > 1) { %>
      <a href="?page=<%= currentPage - 1 %>" class="pagination-link">&laquo; Previous</a>
      <% } %>
      <% for (let i = 1; i <= totalPages; i++) { %>
      <% if (i === currentPage) { %>
      <span class="current-page"><%= i %></span>
      <% } else { %>
      <a href="?page=<%= i %>" class="pagination-link"><%= i %></a>
      <% } %>
      <% } %>
      <% if (currentPage < totalPages) { %>
      <a href="?page=<%= currentPage + 1 %>" class="pagination-link">Next &raquo;</a>
      <% } %>
    </div>
  </section>

  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
</main>

<%- include("../partials/admin/footer") %>



  
  <script>
    function handleformSubmit(event) {
      event.preventDefault();
      if (!validateForm()) {
        return;
      }

      const name = document.getElementsByName('name')[0].value;
      const description = document.getElementById('descriptionId').value;

      console.log('Submitting category:', { name, description }); // Log data being sent

      fetch('/admin/addcategory', {
        method: "POST",
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({ name, description })
      })
        .then(response => {
          if (!response.ok) {
            console.log("Response ", response)
            throw new Error(`HTTP error! Status: ${response.status}`);
          }
          return response.json();
        })
        .then(data => {
          Swal.fire({
            icon: "success",
            title: "Success",
            text: "Category added successfully"
          }).then(() => {
            location.reload();
          });
        })
        .catch(error => {
          console.log("error in the catch of fetch")
          if (error.message.includes("Unexpected token '<'")) {
            Swal.fire({
              icon: "error",
              title: "Oops",
              text: "The server returned an invalid response. Please check the backend."
            });
          } else {
            Swal.fire({
              icon: "error",
              title: "Oops",
              text: `Already exists: ${error.message}`
            });
          }
        });

    }


    function validateForm() {
      clearErrorMessages();
      const name = document.getElementsByName('name')[0].value.trim();
      const description = document.getElementsByName('description')[0].value.trim();
      let isValid = true;


      if (name === "") {
        displayErrorMessage("name-error", "please enter a name");
        isValid = false;
      }
      else if (!/^[a-zA-Z0-9\s-_]+$/.test(name)) {
        displayErrorMessage("name-error", "Category name should only contain alphabetic Characters");
        isValid = false;
      }


      if (description === "") {
        displayErrorMessage("description-error", "please enter a description");
        isValid = false;

      }
      return isValid;

    }
    function displayErrorMessage(elementId, message) {
      var errorElement = document.getElementById(elementId);
      errorElement.innerText = message;
      errorElement.style.display = "block";
    }
    function clearErrorMessages() {
      const errorElements = document.getElementsByClassName('error-message');
      Array.from(errorElements).forEach((element) => {
        element.innerHTML = "";
        element.style.display = "none"
      });
    }
    </script>